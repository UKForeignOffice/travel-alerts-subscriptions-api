// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Alert {
  id      Int      @default(autoincrement()) @id
  staff Staff    @relation(fields: [staffId], references: [id])
  staffId  Int
  title String
  emailBody String
  smsBody   String
  publishDate   DateTime
  messages  Message[]
}

model Message {
  id      Int      @default(autoincrement()) @id
  alert Alert    @relation(fields: [alertId], references: [id])
  alertId  Int
  subscription Subscription    @relation(fields: [subscriptionId], references: [id])
  subscriptionId  Int
  sentDate   DateTime
  deliveryStatusUpdatedDate DateTime
  deliveryStatus    DeliveryStatus    @relation(fields: [deiveryStatusId], references: [id])
  deiveryStatusId  Int
}

model Subscription {
  id      Int      @default(autoincrement()) @id
  recipientId   String
  recipientIdPrefix   String
  isRecipientIdVerified   Boolean @default(false)
  channel   Channel    @relation(fields: [channelId], references: [id])
  channelId  String
  country   Country    @relation(fields: [countryCode], references: [code])
  countryCode  String
  subscribeDate DateTime? @default(now())
  unsubscribeDate DateTime?
  lastUpdatedDate DateTime? @default(now())
  unsubscribeReason UnsubscribeReason?    @relation(fields: [unsubscribeReasonId], references: [id])
  unsubscribeReasonId  Int?
  messages  Message[]
  subscriberSubscription    SubscriberSubscription[]

  @@unique([recipientId, recipientIdPrefix, channelId, countryCode])
}

model Subscriber {
  id     Int      @default(autoincrement()) @id
  isBritishNational   Boolean
  isGlobalSubscriber   Boolean? @default(false)
  subscriberSubscription    SubscriberSubscription[]
}

model SubscriberSubscription {
  subscriber        Subscriber     @relation(fields: [subscriberId], references: [id])
  subscriberId      Int
  subscription        Subscription     @relation(fields: [subscriptionId], references: [id])
  subscriptionId      Int
  @@id([subscriberId, subscriptionId])
}

model Staff {
  id      Int      @default(autoincrement()) @id
  emailAddress  String
  role  StaffRole    @relation(fields: [roleId], references: [id])
  roleId  Int
  alerts Alert[]
}

model StaffRole {
  id      Int      @default(autoincrement()) @id
  description   String
  staff Staff[]
}

model DeliveryStatus {
  id      Int      @default(autoincrement()) @id
  description   String
  messages  Message[]
}

model Channel {
  id  String @id
  description   String
  subscriptions Subscription[]
}

model Country {
  code  String @id
  name   String
  slug  String
  subscriptions Subscription[]
}

model UnsubscribeReason {
  id      Int      @default(autoincrement()) @id
  category  UnsubscribeReasonCategory?    @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  textDescription   String?
  subscriptions Subscription[]
}

model UnsubscribeReasonCategory {
  id      Int      @default(autoincrement()) @id
  description   String
  unsubscribeReasons UnsubscribeReason[]
}
